#
#FROM alpine as builder
#
#ARG BIND9_VERSION=9.14.0
#
#WORKDIR /tmp
#
#RUN \
#  apk update  --quiet && \
#  apk upgrade --quiet && \
#  apk add     --quiet --virtual .fetch-deps \
#    curl file gcc krb5-dev libcap-dev \
#    libgss-dev libxml2-dev json-c-dev linux-headers make musl-dev openssl-dev perl
#
#RUN \
#  curl \
#    --location \
#    -o bind-${BIND9_VERSION}.tar.gz \
#    ftp://ftp.isc.org/isc/bind9/${BIND9_VERSION}/bind-${BIND9_VERSION}.tar.gz
#
#RUN \
#  curl \
#    --location \
#    -o bind-${BIND9_VERSION}.tar.gz.sha256.asc \
#    ftp://ftp.isc.org/isc/bind9/${BIND9_VERSION}/bind-${BIND9_VERSION}.tar.gz.sha256.asc
#
#RUN \
#  sha256sum -c bind-${BIND9_VERSION}.tar.gz.sha256.asc
#
#RUN \
#  tar xf bind.tar.gz --strip-components=1
#
#RUN \
#  CFLAGS=-O2 ./configure \
#    --silent \
#    --with-gssapi=/usr/include/gssapi \
#    --with-dlopen=yes \
#    --prefix=/usr/local \
#    --sysconfdir=/etc/bind \
#    --localstatedir=/var \
#    --enable-linux-caps \
#    --enable-auto-validation \
#    --enable-threads \
#    --enable-ipv6 \
#    --enable-shared \
#    --with-openssl=/usr \
#    --with-libxml2 \
#    --with-libjson \
#    --with-libtool
#
#RUN \
#  make && \
#  for TARGET in lib bin/delv bin/dig bin/dnssec bin/nsupdate; do \
#    make -C $TARGET install; \
#  done
#
## ---------------------------------------------------------------------------------------

FROM alpine:3.9

EXPOSE 37/udp 53 88 135/tcp 137/udp 138/udp 139 389 445 464 636/tcp 1024-5000/tcp 3268/tcp 3269/tcp

ARG BUILD_DATE
ARG BUILD_VERSION
ARG SAMBA_VERSION

ENV \
  TZ=UTC

# ---------------------------------------------------------------------------------------

RUN \
  apk update  --quiet && \
  apk upgrade --quiet && \
  apk add     --quiet \
    bash \
    bind \
    ca-certificates \
    expect \
    krb5 \
    krb5-server \
    openldap-clients \
    samba-dc \
    tdb \
    libxml2 \
    json-c \
    libcrypto \
    supervisor \
    tzdata && \
  cp /usr/share/zoneinfo/$TZ /etc/localtime && \
  echo $TZ >/etc/timezone && \
  mv /etc/samba/smb.conf /etc/samba/smb.conf-DIST && \
  mkdir -p /etc/samba/conf.d && \
  mkdir -p /var/log/samba/cores && \
  rm -rf \
    /tmp/* \
    /var/cache/apk/*

COPY --from=builder /usr/local /usr/local
COPY rootfs/ /

VOLUME [ "/etc/samba" "/var/lib/samba" ]

CMD ["/init/run.sh"]

# ---------------------------------------------------------------------------------------

LABEL \
  version="${BUILD_VERSION}" \
  maintainer="Bodo Schulz <bodo@boone-schulz.de>" \
  org.label-schema.build-date=${BUILD_DATE} \
  org.label-schema.name="Samba4 Docker Image" \
  org.label-schema.description="Inofficial Samba4 Docker Image" \
  org.label-schema.url="https://www.samba.org/" \
  org.label-schema.vcs-url="https://github.com/bodsch/docker-samba4" \
  org.label-schema.vendor="Bodo Schulz" \
  org.label-schema.version=${SAMBA_VERSION} \
  org.label-schema.schema-version="1.0" \
  com.microscaling.docker.dockerfile="/Dockerfile" \
  com.microscaling.license="unlicense"

# ---------------------------------------------------------------------------------------
